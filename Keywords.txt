# ORMKeyWords
Keywords used for searching ORM configuration related changes

1. Java Related Keywords
hibernate.connection.driver\class,hibernate.connection.datasource,hibernate.connection.url,hibernate.connection.username,
hibernate.connection.password,hibernate.dialect,hibernate.c3p0.min\size,hibernate.c3p0.max\size,hibernate.c3p0.timeout,
hibernate.c3p0.max\statements,hibernate.c3p0.idle\test\period,hibernate.connection.datasource,
hibernate.transaction.factory\class,hibernate.transaction.manager\lookup\class,hibernate.jndi.class,
hibernate.jndi.url,transaction.manager\lookup\class,transaction.factory\class,connection.datasource,
c3p0.idle\test\period,c3p0.max\statements,c3p0.timeout,c3p0.max\size,c3p0.min\size,dialect,connection.password,
connection.username,connection.url,connection.driver\class,hibernate.connection.pool\size,
TransactionManagerLookupStrategy,JndiName,Datasource,TransactionStrategy,<class,<many-to-one,<one-to-one,<one-to-many,
<many-to-many,hibernate.default\schema,hibernate.default\catalog,MapResources,not-null,formula,NamingStrategy,default-schema,
@hibernate.id,@hibernate.property,new Column(,new SimpleValue(,new Property(,<generator class,<discriminator,<subclass,
<joined-subclass,cascade,inverse,LockMode.,UserType,CompositeUserType,<composite-element,<set,<idbag,<list,<map,
<mapping package,<mapping class,@Table,@GeneratedValue,@GenericGenerator,@Temporal,@Column,@Lob,@Embedded,
@Embeddable,@Access,@javax.persistence.Access,@Column,@javax.persistence.Column,@javax.persistence.TableGenerator,
@TableGenerator,<table-generator,@javax.persistence.SequenceGenerator,<sequence-generator,@AttributeOverride,@JoinColumns,
@OneToOne,@OneToMany,@ManyToOne,@ManyToMany,@Inheritance,@DiscriminatorColumn,@PrimaryKeyJoinColumn,@MappedSuperclass,
@JoinTable,@CollectionTable,@SecondaryTables,@OnDelete,@ManyToAny,hibernate.default\entity\mode,dynamic-insert,
dynamic-update,lazy=,outer-join=,batch-size=,hibernate.jdbc.batch\size,@BatchSize,hibernate.max\fetch\depth,
max\fetch\depth,optimistic-lock,FlushMode.,<version,@Version,hibernate.connection.isolation,connection.isolation,
<cache,hibernate.cache.region\prefix,cache.region\prefix,cache.provider\class,hibernate.cache.provider\class,
<class-cache,<collection-cache,CacheMode,hibernate.cache.use\query\cache,hibernate.cache.default\cache\concurrency\strategy,
cache.default\cache\concurrency\strategy,cache.use\query\cache,@Cacheable,@Cache,hibernate.cache.use\minimal\puts,
hibernate.cache.use\second\level\cache,hibernate.cache.query\cache\factory,hibernate.cache.use\structured\entries,
<sql-query,FetchType.,@NamedQuery,@SqlResultSetMapping,hibernate.default\batch\fetch\size,hibernate.order\updates,
hibernate.jdbc.fetch\size,hibernate.jdbc.use\scrollable\resultset,hibernate.connection.release\mode,
hibernate.transaction.manager\lookup\class,jta.UserTransaction,hibernate.transaction.factory\class,
hibernate.transaction.flush\before\completion,hibernate.transaction.auto\close\session,hibernate.cglib.use\reflection\optimizer,
hibernate. show\sql,show\sql,generate\statistics,hibernate.format\sql,hibernate.use\sql\comments

2. PHP Related Keywords
EntityManager::create(,,\Doctrine\ORM\Mapping\Driver\DatabaseDriver,@Entity,,@Table,,@Id,@Column,@GenerateValue,
@SequenceGenerator,@OneToMany,@ManyToOne,@OneToOne,@JoinColumn,@ManyToMany,@AttributeOverrides,@Embeddable,@JoinTable(,
@InheritanceType(,<entity,<many-to-one,<many-to-many,<one-to-one,<one-to-many,<embedded,<sequence-generator,<join-column,
<join-table,oneToMany:,oneToOne:,manyToOne:,joinColumn:,joinTable:,inverseJoinColumns:,type: entity,inheritanceType:,
@MappedSuperclass,type: mappedSuperclass,@UniqueConstraint,<mapped-superclass,@PostUpdate,@PrePersist,@PreRemove,
@PreUpdate,@PostPersist,@PostRemove,@PostLoad,new Paginator(,@Version,setQueryCacheDriver,setQueryCacheLifeTime,
expireQueryCache,setMaxResults,setFirstResult,setHint,setResultCacheDriver,setResultCacheLifeTime,expireResultCache,
setResultCacheId,useResultCache,setFetchMode,<named-native-queries,namedNativeQueries:,@ChangeTrackingPolicy,<indexes,
@Index,@Cache,@ChangeTrackingPolicy,AbstractCache,Doctrine\Common\Cache,MemcacheCache,ArrayCache,RedisCache,XcacheCache,
setMetadataCacheImpl,getSQL(),getDQL() 
3. Python Related Keywords
create\engine(,Session(,prepare(,contextual\connect(,pool\size,poolclass,unique\connection(,sqlalchemy.pool.Pool,
AssertionPool(,Table(,UniqueConstraint(,sqlalchemy.schema.,Column(,relationship(,mapper(,@event.listens\for(,
sqlalchemy.orm.column\property(,column\property(,exclude\properties,deferred(,undefer(,orm.undefer\group(,defer(,
orm.defaultload(,undefer\group(,orm.column\property(,ForeignKey(,@validates(,@property,@hybrid\property,synonym(,
composite(,Bundle,object\mapper(,configure\mappers(,clear\mappers(,add\properties(,add\property(,ForeignKeyConstraint(,
lazy=,join\depth,primaryjoin,back\populates,collection\class,@collection,UniqueConstraint(,@declared\attr,automap\base(,
index=,Index(,autoflush,with\hint(,with\lockmode(,FromCache(,logging.basicConfig(),getLogger('sqlalchemy.engine')

4. C# Related Keywords 
hibernate.connection.driver\class,hibernate.dialect,hibernate.connection.provider,hibernate.connection.connection\string,
hibernate.connection.isolation,hibernate.default\schema,hibernate.connection.connection\string\name,connection.provider,
connection.driver\class,connection.connection\string,connection.connection\string\name,dialect,<generator class,<many-to-one,
<one-to-one,<property,Id(,Generator(,Class(,Property(,Component(,new Property(,new SimpleValue(,ManyToOne(,
OneToMany(,OneToOne(,<one-to-many,<discriminator,<subclass,Discriminator(,<joined-subclass,Subclass(,
hibernate.use\proxy\validator,use\proxy\validator,NHibernate.Cfg.Environment.UseProxyValidator,NHibernate.UserTypes,
IUserType,ICompositeUserType,<composite-element,<database-object,CompositeId,Serializable,hbm2ddl.auto,transaction.factory\class,    
hibernate.use\reflection\optimizer,use\reflection\optimizer,Environment.UseReflectionOptimizer,hibernate.bytecode.provider,
bytecode.provider,Environment.BytecodeProvider,dynamic-insert,dynamic-update,hibernate.adonet.batch\size,adonet.batch\size,
hibernate.max\fetch\depth,max\fetch\depth,NHibernate.ConnectionReleaseMode,connection.release\mode,
hibernate.connection.release\mode,hibernate.connection.isolation,connection.isolation,Version(,<version,optimistic-lock,
Cache(,<cache,hibernate.cache.region\prefix,cache.region\prefix,hibernate.cache.provider\class,cache.provider\class,<syscache,
<class-cache,<collection-cache,.SetFetchMode,hibernate.cache.use\query\cache,cache.use\query\cache,.SetCacheable,
hibernate.cache.use\minimal\puts,cache.use\minimal\puts,hibernate.cache.query\cache\factory,cache.query\cache\factory,hibernate.show\sql,
show\sql,generate\statistics,Session.SessionFactory.Statistics
